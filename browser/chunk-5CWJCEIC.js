import{a as u}from"./chunk-JMLIFSAH.js";import{f as a}from"./chunk-HTJRXNRF.js";import{a as m}from"./chunk-3WG2WLZ4.js";var s=class extends u{constructor(i){super(i),this.reset=this._registerSignalInput("reset"),this.duration=this.registerDataInput("duration",a),this.lastRemainingTime=this.registerDataOutput("lastRemainingTime",a,NaN)}_execute(i,h){if(h===this.reset){this.lastRemainingTime.setValue(NaN,i),i._setExecutionVariable(this,"lastRemainingTime",NaN),i._setExecutionVariable(this,"timestamp",0);return}let e=this.duration.getValue(i);if(e<=0||isNaN(e)||!isFinite(e))return this._reportError(i,"Invalid duration in Throttle block");let o=i._getExecutionVariable(this,"lastRemainingTime",NaN),t=Date.now();if(isNaN(o))return this.lastRemainingTime.setValue(0,i),i._setExecutionVariable(this,"lastRemainingTime",0),i._setExecutionVariable(this,"timestamp",t),this.out._activateSignal(i);{let r=t-i._getExecutionVariable(this,"timestamp",0),n=e*1e3;if(n<=r)return this.lastRemainingTime.setValue(0,i),i._setExecutionVariable(this,"lastRemainingTime",0),i._setExecutionVariable(this,"timestamp",t),this.out._activateSignal(i);{let l=n-r;this.lastRemainingTime.setValue(l/1e3,i),i._setExecutionVariable(this,"lastRemainingTime",l)}}}getClassName(){return"FlowGraphThrottleBlock"}};m("FlowGraphThrottleBlock",s);export{s as a};
