import{f}from"./chunk-C4D4KATR.js";import{k as P,y as v}from"./chunk-OQPKOFQF.js";import{b as c}from"./chunk-4UCLQGBG.js";import{a as _,b,h as m}from"./chunk-YMYK7FOB.js";var u=class i{constructor(s,e,t,r){this.x=s,this.y=e,this.width=t,this.height=r}toGlobal(s,e){return new i(this.x*s,this.y*e,this.width*s,this.height*e)}toGlobalToRef(s,e,t){return t.x=this.x*s,t.y=this.y*e,t.width=this.width*s,t.height=this.height*e,this}clone(){return new i(this.x,this.y,this.width,this.height)}};var p=class{static GetEffect(s){return s.getPipelineContext===void 0?s.effect:s}constructor(s,e=!0){this._wasPreviouslyReady=!1,this._forceRebindOnNextCall=!0,this._wasPreviouslyUsingInstances=null,this.effect=null,this.defines=null,this.drawContext=s.createDrawContext(),e&&(this.materialContext=s.createMaterialContext())}setEffect(s,e,t=!0){this.effect=s,e!==void 0&&(this.defines=e),t&&this.drawContext?.reset()}dispose(s=!1){if(this.effect){let e=this.effect;s?e.dispose():P.SetImmediate(()=>{e.getEngine().onEndFrameObservable.addOnce(()=>{e.dispose()})}),this.effect=null}this.drawContext?.dispose()}};var g={positions:[1,1,-1,1,-1,-1,1,-1],indices:[0,1,2,0,2,3]},C=class{constructor(s,e=g){this._fullscreenViewport=new u(0,0,1,1);let t=e.positions??g.positions,r=e.indices??g.indices;this.engine=s,this._vertexBuffers={[f.PositionKind]:new f(s,t,f.PositionKind,!1,!1,2)},this._indexBuffer=s.createIndexBuffer(r),this._indexBufferLength=r.length,this._onContextRestoredObserver=s.onContextRestoredObservable.add(()=>{this._indexBuffer=s.createIndexBuffer(r);for(let h in this._vertexBuffers)this._vertexBuffers[h]._rebuild()})}setViewport(s=this._fullscreenViewport){this.engine.setViewport(s)}bindBuffers(s){this.engine.bindBuffers(this._vertexBuffers,this._indexBuffer,s)}applyEffectWrapper(s){this.engine.setState(!0),this.engine.depthCullingState.depthTest=!1,this.engine.stencilState.stencilTest=!1,this.engine.enableEffect(s.drawWrapper),this.bindBuffers(s.effect),s.onApplyObservable.notifyObservers({})}saveStates(){this._savedStateDepthTest=this.engine.depthCullingState.depthTest,this._savedStateStencilTest=this.engine.stencilState.stencilTest}restoreStates(){this.engine.depthCullingState.depthTest=this._savedStateDepthTest,this.engine.stencilState.stencilTest=this._savedStateStencilTest}draw(){this.engine.drawElementsType(0,0,this._indexBufferLength)}_isRenderTargetTexture(s){return s.renderTarget!==void 0}render(s,e=null){if(!s.effect.isReady())return;this.saveStates(),this.setViewport();let t=e===null?null:this._isRenderTargetTexture(e)?e.renderTarget:e;t&&this.engine.bindFramebuffer(t),this.applyEffectWrapper(s),this.draw(),t&&this.engine.unBindFramebuffer(t),this.restoreStates()}dispose(){let s=this._vertexBuffers[f.PositionKind];s&&(s.dispose(),delete this._vertexBuffers[f.PositionKind]),this._indexBuffer&&this.engine._releaseBuffer(this._indexBuffer),this._onContextRestoredObserver&&(this.engine.onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null)}},U=(()=>{class i{static RegisterShaderCodeProcessing(e,t){if(!t){delete i._CustomShaderCodeProcessing[e??""];return}i._CustomShaderCodeProcessing[e??""]=t}static _GetShaderCodeProcessing(e){return i._CustomShaderCodeProcessing[e]??i._CustomShaderCodeProcessing[""]}get name(){return this.options.name}set name(e){this.options.name=e}isReady(){return this._drawWrapper.effect?.isReady()??!1}get drawWrapper(){return this._drawWrapper}get effect(){return this._drawWrapper.effect}set effect(e){this._drawWrapper.effect=e}constructor(e){this.alphaMode=0,this.onEffectCreatedObservable=new c(void 0,!0),this.onApplyObservable=new c,this._shadersLoaded=!1,this._webGPUReady=!1,this._importPromises=[],this.options=b(_({},e),{name:e.name||"effectWrapper",engine:e.engine,uniforms:e.uniforms||e.uniformNames||[],uniformNames:void 0,samplers:e.samplers||e.samplerNames||[],samplerNames:void 0,attributeNames:e.attributeNames||["position"],uniformBuffers:e.uniformBuffers||[],defines:e.defines||"",useShaderStore:e.useShaderStore||!1,vertexUrl:e.vertexUrl||e.vertexShader||"postprocess",vertexShader:void 0,fragmentShader:e.fragmentShader||"pass",indexParameters:e.indexParameters,blockCompilation:e.blockCompilation||!1,shaderLanguage:e.shaderLanguage||0,onCompiled:e.onCompiled||void 0,extraInitializations:e.extraInitializations||void 0,extraInitializationsAsync:e.extraInitializationsAsync||void 0,useAsPostProcess:e.useAsPostProcess??!1}),this.options.uniformNames=this.options.uniforms,this.options.samplerNames=this.options.samplers,this.options.vertexShader=this.options.vertexUrl,this.options.useAsPostProcess&&(this.options.samplers.indexOf("textureSampler")===-1&&this.options.samplers.push("textureSampler"),this.options.uniforms.indexOf("scale")===-1&&this.options.uniforms.push("scale")),e.vertexUrl||e.vertexShader?this._shaderPath={vertexSource:this.options.vertexShader}:(this.options.useAsPostProcess||(this.options.uniforms.push("scale"),this.onApplyObservable.add(()=>{this.effect.setFloat2("scale",1,1)})),this._shaderPath={vertex:this.options.vertexShader}),this._shaderPath.fragmentSource=this.options.fragmentShader,this._shaderPath.spectorName=this.options.name,this.options.useShaderStore&&(this._shaderPath.fragment=this._shaderPath.fragmentSource,this._shaderPath.vertex||(this._shaderPath.vertex=this._shaderPath.vertexSource),delete this._shaderPath.fragmentSource,delete this._shaderPath.vertexSource),this.onApplyObservable.add(()=>{this.bind()}),this.options.useShaderStore||(this._onContextRestoredObserver=this.options.engine.onContextRestoredObservable.add(()=>{this.effect._pipelineContext=null,this.effect._prepareEffect()})),this._drawWrapper=new p(this.options.engine),this._webGPUReady=this.options.shaderLanguage===1;let t=Array.isArray(this.options.defines)?this.options.defines.join(`
`):this.options.defines;this._postConstructor(this.options.blockCompilation,t,this.options.extraInitializations)}_gatherImports(e=!1,t){this.options.useAsPostProcess&&(e&&this._webGPUReady?t.push(Promise.all([import("./chunk-NUQM5COT.js")])):t.push(Promise.all([import("./chunk-D53D5DTC.js")])))}_postConstructor(e,t=null,r,h){this._importPromises.length=0,h&&this._importPromises.push(...h);let n=this.options.engine.isWebGPU&&!i.ForceGLSL;this._gatherImports(n,this._importPromises),r!==void 0&&r(n,this._importPromises),n&&this._webGPUReady&&(this.options.shaderLanguage=1),e||this.updateEffect(t)}updateEffect(e=null,t=null,r=null,h,n,S,w,y){let d=i._GetShaderCodeProcessing(this.name);if(d?.defineCustomBindings){let o=t?.slice()??[];o.push(...this.options.uniforms);let a=r?.slice()??[];a.push(...this.options.samplers),e=d.defineCustomBindings(this.name,e,o,a),t=o,r=a}this.options.defines=e||"";let x=this._shadersLoaded||this._importPromises.length===0?void 0:()=>m(this,null,function*(){yield Promise.all(this._importPromises),this._shadersLoaded=!0}),l;this.options.extraInitializationsAsync?l=()=>m(this,null,function*(){x?.(),yield this.options.extraInitializationsAsync()}):l=x,this.options.useShaderStore?this._drawWrapper.effect=this.options.engine.createEffect({vertex:w??this._shaderPath.vertex,fragment:y??this._shaderPath.fragment},{attributes:this.options.attributeNames,uniformsNames:t||this.options.uniforms,uniformBuffersNames:this.options.uniformBuffers,samplers:r||this.options.samplers,defines:e!==null?e:"",fallbacks:null,onCompiled:n??this.options.onCompiled,onError:S??null,indexParameters:h||this.options.indexParameters,processCodeAfterIncludes:d?.processCodeAfterIncludes?(o,a)=>d.processCodeAfterIncludes(this.name,o,a):null,processFinalCode:d?.processFinalCode?(o,a)=>d.processFinalCode(this.name,o,a):null,shaderLanguage:this.options.shaderLanguage,extraInitializationsAsync:l},this.options.engine):this._drawWrapper.effect=new v(this._shaderPath,this.options.attributeNames,t||this.options.uniforms,r||this.options.samplerNames,this.options.engine,e,void 0,n||this.options.onCompiled,void 0,void 0,void 0,this.options.shaderLanguage,l),this.onEffectCreatedObservable.notifyObservers(this._drawWrapper.effect)}bind(e=!1){this.options.useAsPostProcess&&!e&&(this.options.engine.setAlphaMode(this.alphaMode),this.drawWrapper.effect.setFloat2("scale",1,1)),i._GetShaderCodeProcessing(this.name)?.bindCustomBindings?.(this.name,this._drawWrapper.effect)}dispose(e=!1){this._onContextRestoredObserver&&(this.effect.getEngine().onContextRestoredObservable.remove(this._onContextRestoredObserver),this._onContextRestoredObserver=null),this.onEffectCreatedObservable.clear(),this._drawWrapper.dispose(!0)}}return i.ForceGLSL=!1,i._CustomShaderCodeProcessing={},i})();export{u as a,p as b,C as c,U as d};
