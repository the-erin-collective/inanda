import{b as y}from"./chunk-4UCLQGBG.js";import{a as N}from"./chunk-PTJ4CXVK.js";import{h as o}from"./chunk-YMYK7FOB.js";var l=class{constructor(){this._createSubNodePromises={},this._isDisposed=!1,this._subNodes={},this._onSubNodeDisposed=e=>{let t=e;delete this._subNodes[t.name],this._onSubNodesChanged()}}callOnSubNode(e,t){let n=this.getSubNode(e);if(n){t(n);return}this._createSubNodePromisesResolvedAsync().then(()=>{let a=this.getSubNode(e);if(a){t(a);return}this.createAndAddSubNodeAsync(e).then(d=>{t(d)})})}createAndAddSubNodeAsync(e){var t;return(t=this._createSubNodePromises)[e]||(t[e]=this._createSubNode(e).then(n=>(this._addSubNode(n),n))),this._createSubNodePromises[e]}dispose(){this._isDisposed=!0;let e=Object.values(this._subNodes);for(let t of e)t.dispose();this._subNodes={},this._createSubNodePromises={}}getSubNode(e){return this._subNodes[e]??null}removeSubNodeAsync(e){return o(this,null,function*(){yield this._createSubNodePromisesResolvedAsync();let t=e.name;this._subNodes[t]&&delete this._subNodes[t],delete this._createSubNodePromises[t],this._onSubNodesChanged()})}_createSubNodePromisesResolvedAsync(){return o(this,null,function*(){return yield Promise.all(Object.values(this._createSubNodePromises))})}_addSubNode(e){if(this._isDisposed){e.dispose();return}this._subNodes[e.name]=e,e.onDisposeObservable.addOnce(this._onSubNodeDisposed),this._onSubNodesChanged()}};var r={fftSize:2048,minDecibels:-100,maxDecibels:-30,smoothing:.8};function F(s){return s.analyzerEnabled||s.analyzerFFTSize!==void 0||s.analyzerMinDecibels!==void 0||s.analyzerMaxDecibels!==void 0||s.analyzerSmoothing!==void 0}var h=class{get frequencyBinCount(){return this.fftSize/2}};var p=class{constructor(e,t){this.onDisposeObservable=new y,this.engine=e,t&1&&(this._upstreamNodes=new Set),t&2&&(this._downstreamNodes=new Set)}dispose(){if(this._downstreamNodes){for(let e of Array.from(this._downstreamNodes))if(!this._disconnect(e))throw new Error("Disconnect failed");this._downstreamNodes.clear()}if(this._upstreamNodes){for(let e of Array.from(this._upstreamNodes))if(!e._disconnect(this))throw new Error("Disconnect failed");this._upstreamNodes.clear()}this.onDisposeObservable.notifyObservers(this),this.onDisposeObservable.clear()}_connect(e){return!this._downstreamNodes||this._downstreamNodes.has(e)||!e._onConnect(this)?!1:(this._downstreamNodes.add(e),!0)}_disconnect(e){return!this._downstreamNodes||!this._downstreamNodes.delete(e)?!1:e._onDisconnect(this)}_onConnect(e){return!this._upstreamNodes||this._upstreamNodes.has(e)?!1:(this._upstreamNodes.add(e),!0)}_onDisconnect(e){return this._upstreamNodes?.delete(e)??!1}},_=class extends p{constructor(e,t,n){super(t,n),this.onNameChangedObservable=new y,this._name=e}get name(){return this._name}set name(e){if(this._name===e)return;let t=this._name;this._name=e,this.onNameChangedObservable.notifyObservers({newName:e,oldName:t,node:this})}dispose(){super.dispose(),this.onNameChangedObservable.clear()}};var u=class extends _{constructor(e,t){super(e,t,3)}connect(e){if(!this._connect(e))throw new Error("Connect failed")}disconnect(e){if(!this._disconnect(e))throw new Error("Disconnect failed")}disconnectAll(){if(!this._downstreamNodes)throw new Error("Disconnect failed");let e=this._downstreamNodes.values();for(let t=e.next();!t.done;t=e.next())if(!this._disconnect(t.value))throw new Error("Disconnect failed")}};var m=class extends u{constructor(e){super("Analyzer",e)}setOptions(e){this.fftSize=e.analyzerFFTSize??r.fftSize,this.minDecibels=e.analyzerMinDecibels??r.minDecibels,this.maxDecibels=e.analyzerMaxDecibels??r.maxDecibels,this.smoothing=e.analyzerSmoothing??r.smoothing}};function i(s){return s.getSubNode("Analyzer")}function c(s,e,t){s.callOnSubNode("Analyzer",n=>{n[e]=t})}var q={volume:1},f=class extends u{constructor(e){super("Volume",e)}setOptions(e){this.volume=e.volume??q.volume}};function b(s){return s.getSubNode("Volume")}function j(s,e){return b(s)?.[e]??q[e]}function v(s){return o(this,null,function*(){return new A(s)})}var A=class extends f{constructor(e){super(e),this._volume=1,this.node=new GainNode(e._audioContext)}get volume(){return this._volume}set volume(e){this._volume=e,this.engine._setAudioParam(this.node.gain,e)}get _inNode(){return this.node}get _outNode(){return this.node}_connect(e){return super._connect(e)?(e._inNode&&this.node.connect(e._inNode),!0):!1}_disconnect(e){return super._disconnect(e)?(e._inNode&&this.node.disconnect(e._inNode),!0):!1}getClassName(){return"_VolumeWebAudioSubNode"}};var D=null,S=null;function z(){return D||(D=new Uint8Array),D}function g(){return S||(S=new Float32Array),S}var O=class extends h{constructor(e){super(),this._fftSize=r.fftSize,this._maxDecibels=r.maxDecibels,this._minDecibels=r.minDecibels,this._smoothing=r.smoothing,this._subGraph=e}get fftSize(){return this._fftSize}set fftSize(e){this._fftSize=e,c(this._subGraph,"fftSize",e)}get isEnabled(){return i(this._subGraph)!==null}get minDecibels(){return this._minDecibels}set minDecibels(e){this._minDecibels=e,c(this._subGraph,"minDecibels",e)}get maxDecibels(){return this._maxDecibels}set maxDecibels(e){this._maxDecibels=e,c(this._subGraph,"maxDecibels",e)}get smoothing(){return this._smoothing}set smoothing(e){this._smoothing=e,c(this._subGraph,"smoothing",e)}dispose(){let e=i(this._subGraph);e&&(this._subGraph.removeSubNodeAsync(e),e.dispose())}enableAsync(){return o(this,null,function*(){i(this._subGraph)||(yield this._subGraph.createAndAddSubNodeAsync("Analyzer"))})}getByteFrequencyData(){let e=i(this._subGraph);return e?e.getByteFrequencyData():(N.Warn("AudioAnalyzer not enabled"),this.enableAsync(),z())}getFloatFrequencyData(){let e=i(this._subGraph);return e?e.getFloatFrequencyData():(N.Warn("AudioAnalyzer not enabled"),this.enableAsync(),g())}};function C(s){return o(this,null,function*(){return new x(s)})}var x=class extends m{constructor(e){super(e),this._byteFrequencyData=null,this._floatFrequencyData=null,this._analyzerNode=new AnalyserNode(e._audioContext)}get fftSize(){return this._analyzerNode.fftSize}set fftSize(e){e!==this._analyzerNode.fftSize&&(this._analyzerNode.fftSize=e,this._clearArrays())}get _inNode(){return this._analyzerNode}get minDecibels(){return this._analyzerNode.minDecibels}set minDecibels(e){this._analyzerNode.minDecibels=e}get maxDecibels(){return this._analyzerNode.maxDecibels}set maxDecibels(e){this._analyzerNode.maxDecibels=e}get smoothing(){return this._analyzerNode.smoothingTimeConstant}set smoothing(e){this._analyzerNode.smoothingTimeConstant=e}dispose(){super.dispose(),this._clearArrays(),this._byteFrequencyData=null,this._floatFrequencyData=null,this._analyzerNode.disconnect()}getClassName(){return"_WebAudioAnalyzerSubNode"}getByteFrequencyData(){return(!this._byteFrequencyData||this._byteFrequencyData.length===0)&&(this._byteFrequencyData=new Uint8Array(this._analyzerNode.frequencyBinCount)),this._analyzerNode.getByteFrequencyData(this._byteFrequencyData),this._byteFrequencyData}getFloatFrequencyData(){return(!this._floatFrequencyData||this._floatFrequencyData.length===0)&&(this._floatFrequencyData=new Float32Array(this._analyzerNode.frequencyBinCount)),this._analyzerNode.getFloatFrequencyData(this._floatFrequencyData),this._floatFrequencyData}_clearArrays(){this._byteFrequencyData?.set(z()),this._floatFrequencyData?.set(g())}};var P=class extends l{constructor(e){super(),this._outputNode=null,this._owner=e}initAsync(e){return o(this,null,function*(){let t=F(e);if(t&&(yield this.createAndAddSubNodeAsync("Analyzer")),yield this.createAndAddSubNodeAsync("Volume"),yield this._createSubNodePromisesResolvedAsync(),t){let a=i(this);if(!a)throw new Error("No analyzer subnode.");a.setOptions(e)}let n=b(this);if(!n)throw new Error("No volume subnode.");if(n.setOptions(e),n.getClassName()!=="_VolumeWebAudioSubNode")throw new Error("Not a WebAudio subnode.");if(this._outputNode=n.node,this._outputNode&&this._downstreamNodes){let a=this._downstreamNodes.values();for(let d=a.next();!d.done;d=a.next()){let w=d.value._inNode;w&&this._outputNode.connect(w)}}})}get _inNode(){return this._outputNode}get _outNode(){return this._outputNode}_createSubNode(e){switch(e){case"Analyzer":return C(this._owner.engine);case"Volume":return v(this._owner.engine);default:throw new Error(`Unknown subnode name: ${e}`)}}_onSubNodesChanged(){let e=i(this),t=b(this);e&&t&&t.connect(e)}};export{p as a,_ as b,u as c,b as d,j as e,O as f,P as g};
