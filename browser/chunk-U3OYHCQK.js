import{h}from"./chunk-VE22RIJ6.js";var C=class{static ConvertPanoramaToCubemap(e,o,t,n,r=!1){if(!e)throw"ConvertPanoramaToCubemap: input cannot be null";if(e.length!=o*t*3)throw"ConvertPanoramaToCubemap: input size is wrong";let l=this.CreateCubemapTexture(n,this.FACE_FRONT,e,o,t,r),i=this.CreateCubemapTexture(n,this.FACE_BACK,e,o,t,r),c=this.CreateCubemapTexture(n,this.FACE_LEFT,e,o,t,r),a=this.CreateCubemapTexture(n,this.FACE_RIGHT,e,o,t,r),w=this.CreateCubemapTexture(n,this.FACE_UP,e,o,t,r),f=this.CreateCubemapTexture(n,this.FACE_DOWN,e,o,t,r);return{front:l,back:i,left:c,right:a,up:w,down:f,size:n,type:1,format:4,gammaSpace:!1}}static CreateCubemapTexture(e,o,t,n,r,l=!1){let i=new ArrayBuffer(e*e*4*3),c=new Float32Array(i),a=l?Math.max(1,Math.round(n/4/e)):1,w=1/a,f=w*w,u=o[1].subtract(o[0]).scale(w/e),b=o[3].subtract(o[2]).scale(w/e),d=1/e,F=0;for(let m=0;m<e;m++)for(let R=0;R<a;R++){let B=o[0],p=o[2];for(let g=0;g<e;g++)for(let P=0;P<a;P++){let _=p.subtract(B).scale(F).add(B);_.normalize();let A=this.CalcProjectionSpherical(_,t,n,r);c[m*e*3+g*3+0]+=A.r*f,c[m*e*3+g*3+1]+=A.g*f,c[m*e*3+g*3+2]+=A.b*f,B=B.add(u),p=p.add(b)}F+=d*w}return c}static CalcProjectionSpherical(e,o,t,n){let r=Math.atan2(e.z,e.x),l=Math.acos(e.y);for(;r<-Math.PI;)r+=2*Math.PI;for(;r>Math.PI;)r-=2*Math.PI;let i=r/Math.PI,c=l/Math.PI;i=i*.5+.5;let a=Math.round(i*t);a<0?a=0:a>=t&&(a=t-1);let w=Math.round(c*n);w<0?w=0:w>=n&&(w=n-1);let f=n-w-1,u=o[f*t*3+a*3+0],b=o[f*t*3+a*3+1],d=o[f*t*3+a*3+2];return{r:u,g:b,b:d}}};C.FACE_LEFT=[new h(-1,-1,-1),new h(1,-1,-1),new h(-1,1,-1),new h(1,1,-1)];C.FACE_RIGHT=[new h(1,-1,1),new h(-1,-1,1),new h(1,1,1),new h(-1,1,1)];C.FACE_FRONT=[new h(1,-1,-1),new h(1,-1,1),new h(1,1,-1),new h(1,1,1)];C.FACE_BACK=[new h(-1,-1,1),new h(-1,-1,-1),new h(-1,1,1),new h(-1,1,-1)];C.FACE_DOWN=[new h(1,1,-1),new h(1,1,1),new h(-1,1,-1),new h(-1,1,1)];C.FACE_UP=[new h(-1,-1,-1),new h(-1,-1,1),new h(1,-1,-1),new h(1,-1,1)];function G(s,e){return e>1023?s*Math.pow(2,1023)*Math.pow(2,e-1023):e<-1074?s*Math.pow(2,-1074)*Math.pow(2,e+1074):s*Math.pow(2,e)}function x(s,e,o,t,n,r){n>0?(n=G(1,n-136),s[r+0]=e*n,s[r+1]=o*n,s[r+2]=t*n):(s[r+0]=0,s[r+1]=0,s[r+2]=0)}function M(s,e){let o="",t="";for(let n=e;n<s.length-e&&(t=String.fromCharCode(s[n]),t!=`
`);n++)o+=t;return o}function E(s){let e=0,o=0,t=M(s,0);if(t[0]!="#"||t[1]!="?")throw"Bad HDR Format.";let n=!1,r=!1,l=0;do l+=t.length+1,t=M(s,l),t=="FORMAT=32-bit_rle_rgbe"?r=!0:t.length==0&&(n=!0);while(!n);if(!r)throw"HDR Bad header format, unsupported FORMAT";l+=t.length+1,t=M(s,l);let c=/^-Y (.*) \+X (.*)$/g.exec(t);if(!c||c.length<3)throw"HDR Bad header format, no size";if(o=parseInt(c[2]),e=parseInt(c[1]),o<8||o>32767)throw"HDR Bad header format, unsupported size";return l+=t.length+1,{height:e,width:o,dataPosition:l}}function j(s,e,o=!1){let t=new Uint8Array(s),n=E(t),r=T(t,n);return C.ConvertPanoramaToCubemap(r,n.width,n.height,e,o)}function T(s,e){return L(s,e)}function L(s,e){let o=e.height,t=e.width,n,r,l,i,c,a=e.dataPosition,w=0,f=0,u=0,b=new ArrayBuffer(t*4),d=new Uint8Array(b),F=new ArrayBuffer(e.width*e.height*4*3),m=new Float32Array(F);for(;o>0;){if(n=s[a++],r=s[a++],l=s[a++],i=s[a++],n!=2||r!=2||l&128||e.width<8||e.width>32767)return O(s,e);if((l<<8|i)!=t)throw"HDR Bad header format, wrong scan line width";for(w=0,u=0;u<4;u++)for(f=(u+1)*t;w<f;)if(n=s[a++],r=s[a++],n>128){if(c=n-128,c==0||c>f-w)throw"HDR Bad Format, bad scanline data (run)";for(;c-- >0;)d[w++]=r}else{if(c=n,c==0||c>f-w)throw"HDR Bad Format, bad scanline data (non-run)";if(d[w++]=r,--c>0)for(let R=0;R<c;R++)d[w++]=s[a++]}for(u=0;u<t;u++)n=d[u],r=d[u+t],l=d[u+2*t],i=d[u+3*t],x(m,n,r,l,i,(e.height-o)*t*3+u*3);o--}return m}function O(s,e){let o=e.height,t=e.width,n,r,l,i,c,a=e.dataPosition,w=new ArrayBuffer(e.width*e.height*4*3),f=new Float32Array(w);for(;o>0;){for(c=0;c<e.width;c++)n=s[a++],r=s[a++],l=s[a++],i=s[a++],x(f,n,r,l,i,(e.height-o)*t*3+c*3);o--}return f}var D=class{constructor(){this.supportCascades=!1}loadCubeData(){throw".hdr not supported in Cube."}loadData(e,o,t){let n=new Uint8Array(e.buffer,e.byteOffset,e.byteLength),r=E(n),l=T(n,r),i=r.width*r.height,c=new Float32Array(i*4);for(let a=0;a<i;a+=1)c[a*4]=l[a*3],c[a*4+1]=l[a*3+1],c[a*4+2]=l[a*3+2],c[a*4+3]=1;t(r.width,r.height,o.generateMipMaps,!1,()=>{let a=o.getEngine();o.type=1,o.format=5,o._gammaSpace=!1,a._uploadDataToTextureDirectly(o,c)})}};export{j as a,D as b};
