import{a as e}from"./chunk-GKCI5TYT.js";import{c as t}from"./chunk-ASQBT7SM.js";var C=class{constructor(){this.supportCascades=!0}loadCubeData(s,i,m,o){let p=i.getEngine(),a,l=!1,h=1e3;if(Array.isArray(s))for(let n=0;n<s.length;n++){let d=s[n];a=e.GetDDSInfo(d),i.width=a.width,i.height=a.height,l=(a.isRGB||a.isLuminance||a.mipmapCount>1)&&i.generateMipMaps,p._unpackFlipY(a.isCompressed),e.UploadDDSLevels(p,i,d,a,l,6,-1,n),!a.isFourCC&&a.mipmapCount===1?p.generateMipMapsForCubemap(i):h=a.mipmapCount-1}else{let n=s;a=e.GetDDSInfo(n),i.width=a.width,i.height=a.height,m&&(a.sphericalPolynomial=new t),l=(a.isRGB||a.isLuminance||a.mipmapCount>1)&&i.generateMipMaps,p._unpackFlipY(a.isCompressed),e.UploadDDSLevels(p,i,n,a,l,6),!a.isFourCC&&a.mipmapCount===1?p.generateMipMapsForCubemap(i,!1):h=a.mipmapCount-1}p._setCubeMapTextureParams(i,l,h),i.isReady=!0,i.onLoadedObservable.notifyObservers(i),i.onLoadedObservable.clear(),o&&o({isDDS:!0,width:i.width,info:a,data:s,texture:i})}loadData(s,i,m){let o=e.GetDDSInfo(s),p=(o.isRGB||o.isLuminance||o.mipmapCount>1)&&i.generateMipMaps&&Math.max(o.width,o.height)>>o.mipmapCount-1===1;m(o.width,o.height,p,o.isFourCC,()=>{e.UploadDDSLevels(i.getEngine(),i,s,o,p,1)})}};export{C as a};
