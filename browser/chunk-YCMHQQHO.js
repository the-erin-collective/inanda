import{i as h}from"./chunk-6P4GY6C2.js";import{d as u,f as y,q as f,r as g,u as A}from"./chunk-HTJRXNRF.js";import{a as d}from"./chunk-3WG2WLZ4.js";var c=class extends A{constructor(t={}){super(t),this.keyFrames=[];let i=typeof t?.animationType=="string"?f(t.animationType):g(t?.animationType??0),a=t?.keyFramesCount??1,n=this.registerDataInput("duration_0",y,0),e=this.registerDataInput("value_0",i);this.keyFrames.push({duration:n,value:e});for(let s=1;s<a+1;s++){let m=this.registerDataInput(`duration_${s}`,y,s===a?t.duration:void 0),l=this.registerDataInput(`value_${s}`,i);this.keyFrames.push({duration:m,value:l})}this.initialValue=this.keyFrames[0].value,this.endValue=this.keyFrames[a].value,this.easingFunction=this.registerDataInput("easingFunction",u),this.animation=this.registerDataOutput("animation",u),this.propertyName=this.registerDataInput("propertyName",u,t?.propertyName),this.customBuildAnimation=this.registerDataInput("customBuildAnimation",u)}_updateOutputs(t){let i=t._getGlobalContextVariable("interpolationAnimations",[]),a=this.propertyName.getValue(t),n=this.easingFunction.getValue(t),e=this._createAnimation(t,a,n);if(this.animation.setValue(e,t),Array.isArray(e))for(let s of e)i.push(s.uniqueId);else i.push(e.uniqueId);t._setGlobalContextVariable("interpolationAnimations",i)}_createAnimation(t,i,a){let n=this.initialValue.richType,e=[],s=this.initialValue.getValue(t)||n.defaultValue;e.push({frame:0,value:s});let m=this.config?.numberOfKeyFrames??1;for(let r=1;r<m+1;r++){let p=this.keyFrames[r].duration?.getValue(t),o=this.keyFrames[r].value?.getValue(t);r===m-1&&(o=o||n.defaultValue),p!==void 0&&o&&e.push({frame:p*60,value:o})}let l=this.customBuildAnimation.getValue(t);if(l)return l(null,null,t)(e,60,n.animationType,a);if(typeof i=="string"){let r=h.CreateAnimation(i,n.animationType,60,a);return r.setKeys(e),[r]}else return i.map(p=>{let o=h.CreateAnimation(p,n.animationType,60,a);return o.setKeys(e),o})}getClassName(){return"FlowGraphInterpolationBlock"}};d("FlowGraphInterpolationBlock",c);export{c as a};
