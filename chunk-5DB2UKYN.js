import{a as G}from"./chunk-D2TIEVLQ.js";import{a as p}from"./chunk-YM7IZKBK.js";import{f as D,g as F,i as l,k as g,n as M,q as e,u as y}from"./chunk-BJTH654B.js";import{h as u,j as x,k as h}from"./chunk-4QVQQIPQ.js";import{a as s}from"./chunk-3WG2WLZ4.js";var I=class extends p{constructor(t){super(e(t?.matrixType||"Matrix"),e(t?.matrixType||"Matrix"),i=>i.transpose?i.transpose():h.Transpose(i),"FlowGraphTransposeBlock",t)}};s("FlowGraphTransposeBlock",I);var T=class extends p{constructor(t){super(e(t?.matrixType||"Matrix"),D,i=>i.determinant(),"FlowGraphDeterminantBlock",t)}};s("FlowGraphDeterminantBlock",T);var E=class extends p{constructor(t){super(e(t?.matrixType||"Matrix"),e(t?.matrixType||"Matrix"),i=>i.inverse?i.inverse():h.Invert(i),"FlowGraphInvertMatrixBlock",t)}};s("FlowGraphInvertMatrixBlock",E);var _=class extends G{constructor(t){super(e(t?.matrixType||"Matrix"),e(t?.matrixType||"Matrix"),e(t?.matrixType||"Matrix"),(i,a)=>a.multiply(i),"FlowGraphMatrixMultiplicationBlock",t)}};s("FlowGraphMatrixMultiplicationBlock",_);var b=class extends y{constructor(t){super(t),this.input=this.registerDataInput("input",g),this.position=this.registerDataOutput("position",l),this.rotationQuaternion=this.registerDataOutput("rotationQuaternion",M),this.scaling=this.registerDataOutput("scaling",l),this.isValid=this.registerDataOutput("isValid",F,!1)}_updateOutputs(t){let i=t._getExecutionVariable(this,"executionId",-1),a=t._getExecutionVariable(this,"cachedPosition",null),r=t._getExecutionVariable(this,"cachedRotation",null),c=t._getExecutionVariable(this,"cachedScaling",null);if(i===t.executionId&&a&&r&&c)this.position.setValue(a,t),this.rotationQuaternion.setValue(r,t),this.scaling.setValue(c,t);else{let n=this.input.getValue(t),d=a||new u,m=r||new x,V=c||new u,O=Math.round(n.m[3]*1e4)/1e4,Q=Math.round(n.m[7]*1e4)/1e4,R=Math.round(n.m[11]*1e4)/1e4,v=Math.round(n.m[15]*1e4)/1e4;if(O!==0||Q!==0||R!==0||v!==1){this.isValid.setValue(!1,t),this.position.setValue(u.Zero(),t),this.rotationQuaternion.setValue(x.Identity(),t),this.scaling.setValue(u.One(),t);return}let B=n.decompose(V,m,d);this.isValid.setValue(B,t),this.position.setValue(d,t),this.rotationQuaternion.setValue(m,t),this.scaling.setValue(V,t),t._setExecutionVariable(this,"cachedPosition",d),t._setExecutionVariable(this,"cachedRotation",m),t._setExecutionVariable(this,"cachedScaling",V),t._setExecutionVariable(this,"executionId",t.executionId)}}getClassName(){return"FlowGraphMatrixDecompose"}};s("FlowGraphMatrixDecompose",b);var w=class extends y{constructor(t){super(t),this.position=this.registerDataInput("position",l),this.rotationQuaternion=this.registerDataInput("rotationQuaternion",M),this.scaling=this.registerDataInput("scaling",l),this.value=this.registerDataOutput("value",g)}_updateOutputs(t){let i=t._getExecutionVariable(this,"executionId",-1),a=t._getExecutionVariable(this,"cachedMatrix",null);if(i===t.executionId&&a)this.value.setValue(a,t);else{let r=h.Compose(this.scaling.getValue(t),this.rotationQuaternion.getValue(t),this.position.getValue(t));this.value.setValue(r,t),t._setExecutionVariable(this,"cachedMatrix",r),t._setExecutionVariable(this,"executionId",t.executionId)}}getClassName(){return"FlowGraphMatrixCompose"}};s("FlowGraphMatrixCompose",w);export{I as a,T as b,E as c,_ as d,b as e,w as f};
