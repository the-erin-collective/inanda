import{a as l}from"./chunk-BN6YPLPF.js";import{a as s,o as r}from"./chunk-XK53KQBE.js";import{a as o}from"./chunk-3WG2WLZ4.js";var a=class extends l{constructor(i){super(i),this.config=i,this.inFlows=[],this._cachedActivationState=[],this.reset=this._registerSignalInput("reset"),this.completed=this._registerSignalOutput("completed"),this.remainingInputs=this.registerDataOutput("remainingInputs",r,new s(this.config.inputSignalCount||0));for(let e=0;e<this.config.inputSignalCount;e++)this.inFlows.push(this._registerSignalInput(`in_${e}`));this._unregisterSignalInput("in")}_getCurrentActivationState(i){let e=this._cachedActivationState;if(e.length=0,i._hasExecutionVariable(this,"activationState")){let n=i._getExecutionVariable(this,"activationState",[]);for(let t=0;t<n.length;t++)e.push(n[t])}else for(let n=0;n<this.config.inputSignalCount;n++)e.push(!1);return e}_execute(i,e){let n=this._getCurrentActivationState(i);if(e===this.reset)for(let t=0;t<this.config.inputSignalCount;t++)n[t]=!1;else{let t=this.inFlows.indexOf(e);t>=0&&(n[t]=!0)}if(this.remainingInputs.setValue(new s(n.filter(t=>!t).length),i),i._setExecutionVariable(this,"activationState",n.slice()),n.includes(!1))e!==this.reset&&this.out._activateSignal(i);else{this.completed._activateSignal(i);for(let t=0;t<this.config.inputSignalCount;t++)n[t]=!1}}getClassName(){return"FlowGraphWaitAllBlock"}serialize(i){super.serialize(i),i.config.inputFlows=this.config.inputSignalCount}};o("FlowGraphWaitAllBlock",a);export{a};
