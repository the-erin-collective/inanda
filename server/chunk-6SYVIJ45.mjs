import './polyfills.server.mjs';
import{b as o,c as E,d as m,e as d,f as w,g as C,l as f}from"./chunk-7N2KI66W.mjs";import{d as t,f as B,u as n}from"./chunk-KTHBQP3E.mjs";import{a as l}from"./chunk-JBXNSZOT.mjs";var k=function(e){return e[e.CircleEase=0]="CircleEase",e[e.BackEase=1]="BackEase",e[e.BounceEase=2]="BounceEase",e[e.CubicEase=3]="CubicEase",e[e.ElasticEase=4]="ElasticEase",e[e.ExponentialEase=5]="ExponentialEase",e[e.PowerEase=6]="PowerEase",e[e.QuadraticEase=7]="QuadraticEase",e[e.QuarticEase=8]="QuarticEase",e[e.QuinticEase=9]="QuinticEase",e[e.SineEase=10]="SineEase",e[e.BezierCurveEase=11]="BezierCurveEase",e}(k||{});function Q(e,...s){switch(e){case 11:return new f(...s);case 0:return new o;case 1:return new E(...s);case 2:return new m(...s);case 3:return new d;case 4:return new w(...s);case 5:return new C(...s);default:throw new Error("Easing type not yet implemented")}}var u=class extends n{constructor(s){super(s),this.config=s,this._easingFunctions={},this.type=this.registerDataInput("type",t,11),this.mode=this.registerDataInput("mode",B,0),this.parameters=this.registerDataInput("parameters",t,[1,0,0,1]),this.easingFunction=this.registerDataOutput("easingFunction",t)}_updateOutputs(s){let r=this.type.getValue(s),a=this.mode.getValue(s),c=this.parameters.getValue(s);if(r===void 0||a===void 0)return;let i=`${r}-${a}-${c.join("-")}`;if(!this._easingFunctions[i]){let h=Q(r,...c);h.setEasingMode(a),this._easingFunctions[i]=h}this.easingFunction.setValue(this._easingFunctions[i],s)}getClassName(){return"FlowGraphEasingBlock"}};l("FlowGraphEasingBlock",u);export{k as a,u as b};
