import './polyfills.server.mjs';
import{a as n}from"./chunk-W2PDIF34.mjs";import{a as u}from"./chunk-QG52OVC7.mjs";import{b as l}from"./chunk-UBWCLNWA.mjs";import{d as a,f as p,h,i as s,k as g,n as B,q as m}from"./chunk-KTHBQP3E.mjs";import{h as i,i as C}from"./chunk-JIBGCNGR.mjs";import{a as c}from"./chunk-JBXNSZOT.mjs";var w=class extends u{constructor(r){super(a,p,e=>this._polymorphicLength(e),"FlowGraphLengthBlock",r)}_polymorphicLength(r){switch(l(r)){case"Vector2":case"Vector3":case"Vector4":case"Quaternion":return r.length();default:throw new Error(`Cannot compute length of value ${r}`)}}};c("FlowGraphLengthBlock",w);var y=class extends u{constructor(r){super(a,a,e=>this._polymorphicNormalize(e),"FlowGraphNormalizeBlock",r)}_polymorphicNormalize(r){let e=l(r),t;switch(e){case"Vector2":case"Vector3":case"Vector4":case"Quaternion":return t=r.normalizeToNew(),this.config?.nanOnZeroLength&&r.length()===0&&t.setAll(NaN),t;default:throw new Error(`Cannot normalize value ${r}`)}}};c("FlowGraphNormalizeBlock",y);var x=class extends n{constructor(r){super(a,a,p,(e,t)=>this._polymorphicDot(e,t),"FlowGraphDotBlock",r)}_polymorphicDot(r,e){switch(l(r)){case"Vector2":case"Vector3":case"Vector4":case"Quaternion":return r.dot(e);default:throw new Error(`Cannot get dot product of ${r} and ${e}`)}}};c("FlowGraphDotBlock",x);var V=class extends n{constructor(r){super(s,s,s,(e,t)=>i.Cross(e,t),"FlowGraphCrossBlock",r)}};c("FlowGraphCrossBlock",V);var f=class extends n{constructor(r){super(h,p,h,(e,t)=>e.rotate(t),"FlowGraphRotate2DBlock",r)}};c("FlowGraphRotate2DBlock",f);var d=class extends n{constructor(r){super(s,B,s,(e,t)=>e.applyRotationQuaternion(t),"FlowGraphRotate3DBlock",r)}};c("FlowGraphRotate3DBlock",d);function G(o,r){switch(l(o)){case"Vector2":return r.transformVector(o);case"Vector3":return r.transformVector(o);case"Vector4":return o=o,new C(o.x*r.m[0]+o.y*r.m[1]+o.z*r.m[2]+o.w*r.m[3],o.x*r.m[4]+o.y*r.m[5]+o.z*r.m[6]+o.w*r.m[7],o.x*r.m[8]+o.y*r.m[9]+o.z*r.m[10]+o.w*r.m[11],o.x*r.m[12]+o.y*r.m[13]+o.z*r.m[14]+o.w*r.m[15]);default:throw new Error(`Cannot transform value ${o}`)}}var T=class extends n{constructor(r){let e=r?.vectorType||"Vector3",t=e==="Vector2"?"Matrix2D":e==="Vector3"?"Matrix3D":"Matrix";super(m(e),m(t),m(e),G,"FlowGraphTransformVectorBlock",r)}};c("FlowGraphTransformVectorBlock",T);var N=class extends n{constructor(r){super(s,g,s,(e,t)=>i.TransformCoordinates(e,t),"FlowGraphTransformCoordinatesBlock",r)}};c("FlowGraphTransformCoordinatesBlock",N);export{w as a,y as b,x as c,V as d,f as e,d as f,T as g,N as h};
