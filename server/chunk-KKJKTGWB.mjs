import './polyfills.server.mjs';
import{h as c,k as F}from"./chunk-JIBGCNGR.mjs";var z=class m{constructor(t,n,o,s){this.normal=new c(t,n,o),this.d=s}asArray(){return[this.normal.x,this.normal.y,this.normal.z,this.d]}clone(){return new m(this.normal.x,this.normal.y,this.normal.z,this.d)}getClassName(){return"Plane"}getHashCode(){let t=this.normal.getHashCode();return t=t*397^(this.d|0),t}normalize(){let t=Math.sqrt(this.normal.x*this.normal.x+this.normal.y*this.normal.y+this.normal.z*this.normal.z),n=0;return t!==0&&(n=1/t),this.normal.x*=n,this.normal.y*=n,this.normal.z*=n,this.d*=n,this}transform(t){let n=m._TmpMatrix;t.invertToRef(n);let o=n.m,s=this.normal.x,r=this.normal.y,a=this.normal.z,i=this.d,d=s*o[0]+r*o[1]+a*o[2]+i*o[3],x=s*o[4]+r*o[5]+a*o[6]+i*o[7],h=s*o[8]+r*o[9]+a*o[10]+i*o[11],e=s*o[12]+r*o[13]+a*o[14]+i*o[15];return new m(d,x,h,e)}dotCoordinate(t){return this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z+this.d}copyFromPoints(t,n,o){let s=n.x-t.x,r=n.y-t.y,a=n.z-t.z,i=o.x-t.x,d=o.y-t.y,x=o.z-t.z,h=r*x-a*d,e=a*i-s*x,y=s*d-r*i,u=Math.sqrt(h*h+e*e+y*y),l;return u!==0?l=1/u:l=0,this.normal.x=h*l,this.normal.y=e*l,this.normal.z=y*l,this.d=-(this.normal.x*t.x+this.normal.y*t.y+this.normal.z*t.z),this}isFrontFacingTo(t,n){return c.Dot(this.normal,t)<=n}signedDistanceTo(t){return c.Dot(t,this.normal)+this.d}static FromArray(t){return new m(t[0],t[1],t[2],t[3])}static FromPoints(t,n,o){let s=new m(0,0,0,0);return s.copyFromPoints(t,n,o),s}static FromPositionAndNormal(t,n){let o=new m(0,0,0,0);return this.FromPositionAndNormalToRef(t,n,o)}static FromPositionAndNormalToRef(t,n,o){return o.normal.copyFrom(n),o.normal.normalize(),o.d=-t.dot(o.normal),o}static SignedDistanceToPlaneFromPositionAndNormal(t,n,o){let s=-(n.x*t.x+n.y*t.y+n.z*t.z);return c.Dot(o,n)+s}};z._TmpMatrix=F.Identity();export{z as a};
