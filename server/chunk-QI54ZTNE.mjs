import './polyfills.server.mjs';
function p(o){return Math.floor(o/8)}function y(o){return 1<<o%8}var i=class{constructor(e){this.size=e,this._byteArray=new Uint8Array(Math.ceil(this.size/8))}get(e){if(e>=this.size)throw new RangeError("Bit index out of range");let n=p(e),r=y(e);return(this._byteArray[n]&r)!==0}set(e,n){if(e>=this.size)throw new RangeError("Bit index out of range");let r=p(e),s=y(e);n?this._byteArray[r]|=s:this._byteArray[r]&=~s}};function b(o){let e=[],n=o.length/3;for(let t=0;t<n;t++)e.push([o[t*3],o[t*3+1],o[t*3+2]]);let r=new Map;for(let t=0;t<e.length;t++){let f=e[t];for(let c of f){let a=r.get(c);a||r.set(c,a=[]),a.push(t)}}let s=new i(n),u=[],x=t=>{let f=[t];for(;f.length>0;){let c=f.pop();if(!s.get(c)){s.set(c,!0),u.push(e[c]);for(let a of e[c]){let g=r.get(a);if(!g)return;for(let l of g)s.get(l)||f.push(l)}}}};for(let t=0;t<n;t++)s.get(t)||x(t);let h=0;for(let t of u)o[h++]=t[0],o[h++]=t[1],o[h++]=t[2]}export{b as a};
